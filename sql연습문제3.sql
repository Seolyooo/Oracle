/*
2025/07/22
설유진
sql 연습문제 3

*/

--실습3-1
ALTER SESSION SET "_ORACLE_SCRIPT"=true;
CREATE USER bank IDENTIFIED BY 1234;
GRANT CONNECT, RESOURCE, UNLIMITED TABLESPACE TO bank;
--실습3-2
drop table customer;
create table customer(
    c_id varchar2(14) primary key,
    c_name varchar2(20) not null,
    c_type number(1) not null,
    c_hp varchar(14) unique not null,
    c_addr varchar(100)
);
drop table account;
create table account(
    acc_no char(11) primary key,
    acc_type char(2) not null,
    acc_name varchar2(20) not null,
    acc_cid varchar2(14) not null,
    acc_balance number default 0,
    acc_date date not null,
    FOREIGN KEY(acc_cid) REFERENCES customer(c_id)
);
drop table transaction;
create table transaction(
    tr_bo number GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tr_acc char(11) not null,
    tr_type number(1) not null,
    tr_amount number default 0,
    tr_date date not null,
    FOREIGN key(tr_acc) references account (acc_no)
);

--실습3-3
insert into customer values ('730423-1000001','김유신',1,'010-1234-1001','경기도수원시');
insert into customer values ('750210-1000002','김춘추',1,'010-1234-1002','광주');
insert into customer values ('830513-2000003','선덕여왕',1,'010-1234-1003','마포구');
insert into customer values ('870830-1000004','강감찬',1,'010-1234-1004','영등포구');
insert into customer values ('910913-2000005','신사임당',1,'010-1234-1005','강릉시');
insert into customer values ('941127-1000006','이순신',1,'010-1234-1006','영도구');
insert into customer values ('220-83-52237','(주)한국전산',2,'03-1234-1045','강서구');
insert into customer values ('361-23-42687','(주)정보산업',2,'031-563-1253','광명시');
insert into customer values ('103-23-51094','부산의원',2,'051-518-1010','부산시 남구');


INSERT INTO account VALUES ('101-11-1001','S1','자유저축예금','730423-1000001',420000,TO_DATE('2005-07-21 12:10:03', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO account VALUES ('101-13-1002','S2','정기적립예금','830513-2000003',1020000,TO_DATE('2011-05-13 13:20:12', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO account VALUES ('101-11-1003','S1','자유저축예금','870830-1000004',53000,TO_DATE('2007-03-17 21:54:06', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO account VALUES ('101-21-1004','L1','고객신용대출','910913-2000005',200500,TO_DATE('2009-08-25 14:34:57', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO account VALUES ('101-13-1005','S3','주택청약예금','941127-1000006',720800,TO_DATE('2013-10-15 19:56:34', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO account VALUES ('101-23-1006','L2','예금담보대출','730423-1000001',250000,TO_DATE('2013-12-11 18:14:22', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO account VALUES ('101-23-1007','L2','주택담보대출','750210-1000002',2700000,TO_DATE('2020-09-23 09:19:13', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO account VALUES ('101-11-2001','S1','자유저축예금','220-83-52237',23000000,TO_DATE('2003-04-14 11:02:43', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO account VALUES ('101-11-2002','S1','자유저축예금','361-23-42687',201000,TO_DATE('2008-12-30 12:32:59', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO account VALUES ('101-11-2003','S1','자유저축예금','103-23-51094',8325010,TO_DATE('2010-06-07 15:47:04', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO transaction (TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES ('101-11-1001', 1, 50000, TO_DATE('2025-07-12 13:55:31', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO transaction (TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES ('101-11-1003', 1, 120000, TO_DATE('2025-07-12 14:15:22', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO transaction (TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES ('101-11-2001', 2, 300000, TO_DATE('2025-07-19 17:53:42', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO transaction (TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES ('101-13-1002', 1, 1000000, TO_DATE('2025-07-20 07:25:08', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO transaction (TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES ('101-11-1001', 0, 0, TO_DATE('2025-07-20 09:21:13', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO transaction (TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES ('101-13-1005', 1, 200000, TO_DATE('2025-07-20 10:15:02', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO transaction (TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES ('101-11-1001', 1, 450000, TO_DATE('2025-07-20 11:34:42', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO transaction (TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES ('101-11-2002', 2, 32000, TO_DATE('2025-07-21 09:12:37', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO transaction (TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES ('101-11-2003', 0, 0, TO_DATE('2025-07-21 16:02:31', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO transaction (TR_ACC, TR_TYPE, TR_AMOUNT, TR_DATE)
VALUES ('101-11-1003', 2, 75000, TO_DATE('2025-07-21 17:41:11', 'YYYY-MM-DD HH24:MI:SS'));



--실습3-4
select * from account;
--실습3-1
select * from customer;
--실습3-1
select * from transaction where tr_type != 0;
--실습3-1
select c_name, c_id from customer;
--실습3-8
select acc_type, acc_name from account;
--실습3-9
select distinct acc_type, acc_name from account;
--실습3-10
select * from account where acc_balance >= 1000000;
--실습3-11
select * from customer where c_id like '____________';
--실습3-12
select * form customer where ;
--실습3-13
select * from transaction where tr_type = 1;
--실습3-14
select * from transaction where tr_type = 2 order by tr_amount desc;
--실습3-15
select 
sum(tr_amount) as 입금총액, avg(tr_amount) as 입금평균
from transaction where tr_type=1;
--실습3-16
select max(tr_amount) as 큰금액, min(tr_amount) as 작은금액 from transaction where tr_type=2;
--실습3-17
select * from account where acc_name = '자유저축예금' and acc_balance >= 100000;
--실습3-18
select * from account where acc_type ='S1' order by acc_balance desc fetch first 1 row only;
--실습3-19
select * from transaction where tr_type >= 1 order by tr_type,tr_amount desc;;
--실습3-20
select 
    COUNT(CASE WHEN tr_type = 0 THEN 1 END)as "조회건수",
    COUNT(CASE WHEN tr_type = 1 THEN 1 END)as "입금건수",
    COUNT(CASE WHEN tr_type = 2 THEN 1 END)as "출금건수"
 from transaction;

--실습3-21
select tr_type,
case 
 when tr_type = 1 then '입금'
 when tr_type = 2 then '출금'
 else '조회'
 end as 거래종류,
tr_acc,tr_amount from transaction;
    
--실습3-22
select tr_type,count(*) 
from transaction group by tr_type order by tr_type;
--실습3-23
select 
tr_acc,tr_type,sum(tr_amount) as 합계
from transaction
where tr_type = 1
group by tr_acc, tr_type
having sum(tr_amount) >= 100000
order by 합계 desc;


--실습3-1
 SELECT
 TR_ACC,
 COUNT(*) AS 거래건수,
 SUM(TR_AMOUNT) AS 총거래금액
FROM transaction
where tr_type = 1 or tr_type= 2
GROUP BY tr_acc
HAVING sum(TR_AMOUNT) >=100000
ORDER BY sum(TR_AMOUNT) desc
OFFSET 1 rows fetch next 2 rows only;

--실습3-1
select 
acc_no,acc_name,c_id,c_name,acc_balance,acc_date
from account a
join customer c on a.acc_cid=c.c_id;
--실습3-26
select 
    acc_no as 계좌번호 ,acc_name as 계좌이름 ,acc_cid as 주민번호 ,c_name as 고객명 ,acc_balance as 현재잔액 
    from account a
    join customer c on a.acc_cid=c.c_id
    where acc_balance >=1000000
    order by acc_balance desc;
--실습3-27
select 
tr_bo, tr_acc, acc_cid,tr_type, tr_amount,tr_date
from transaction t
join account a on t.tr_acc=acc_no order by tr_bo;
--실습3-28
 SELECT 
a.acc_no,
 c.C_NAME,
 SUM(CASE WHEN t.TR_TYPE = 1 THEN t.TR_AMOUNT ELSE 0 END) AS 총입금액,
 SUM(CASE WHEN t.TR_TYPE = 2 THEN t.TR_AMOUNT ELSE 0 END) AS 총출금액
FROM TRANSACTION t
right JOIN ACCOUNT a ON t.TR_ACC = a.ACC_NO
 JOIN CUSTOMER c ON a.ACC_CID = c.C_ID
 WHERE c.C_TYPE = 1
 GROUP BY a.acc_no, c.C_NAME;
 --실습 2-29
  SELECT
 a.ACC_NO,
 a.ACC_CID,
 a.ACC_NAME,
 c.C_NAME,
 a.ACC_BALANCE + 
SUM(CASE WHEN t.TR_TYPE = 001 THEN t.TR_AMOUNT ELSE 0 END) - 
SUM(CASE WHEN t.TR_TYPE = 002 THEN t.TR_AMOUNT ELSE 0 END) AS 최종잔액
FROM 
ACCOUNT a
 LEFT JOIN 
TRANSACTION t ON a.ACC_NO = t.TR_ACC
 JOIN 
CUSTOMER c ON a.ACC_CID = c.C_ID 
WHERE 
C_TYPE = 1 
GROUP BY
 a.ACC_NO, 
a.ACC_CID, 
a.ACC_NAME, 
a.ACC_BALANCE, 
c.C_NAME
 ORDER BY
 a.ACC_NO;
 
 --3-30
 SELECT
 c.C_NAME,
 a.ACC_NO,
 t.TOTAL_DEPOSIT,
 c.C_ADDR
 FROM
 ACCOUNT a
 JOIN CUSTOMER c ON a.ACC_CID = c.C_ID
 JOIN (
 SELECT
 TR_ACC,
 SUM(TR_AMOUNT) AS TOTAL_DEPOSIT
 FROM TRANSACTION
 WHERE TR_TYPE = 1
 GROUP BY TR_ACC
 ) t ON a.ACC_NO = t.TR_ACC
 WHERE
 t.TOTAL_DEPOSIT = (
 SELECT
 MAX(SUM_AMOUNT)
 FROM (
 SELECT
 TR_ACC,
 SUM(TR_AMOUNT) AS SUM_AMOUNT
 FROM TRANSACTION
 WHERE TR_TYPE = 1
 GROUP BY TR_ACC
 )
 );